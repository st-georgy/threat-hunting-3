---
title: "Применение технологий ИИ и машинного обучения для поиска угроз ИБ"
author: "Zhidkov Georgy"
format: 
    md:
        output-file: README.md
---

Лабораторная работа №5

> Анализ данных сетевой активности с использованием аналитической СУБД Clickhouse

## Цель

1.  Изучить возможности СУБД DuckDB для обработки и анализ больших данных
2.  Получить навыки применения Arrow совместно с языком программирования R
3.  Получить навыки анализа метаинфомации о сетевом трафике
4.  Получить навыки применения облачных технологий хранения, подготовки и анализа данных: Managed Service for ClickHouse, RStudio Server

## Исходные данные

1.  ОС Windows 11
2.  RStudio Server
3.  Yandex Cloud: S3 Object Storage
4.  СУБД Clickhouse
5.  Датасет tm_data.pqt

## Описание работы

### Общая ситуация

Как и прежде, Вы – специалист по информационной безопасности компании “СуперМегатек”. Вы, являясь специалистом Threat Hunting, часто используете информацию о сетевом трафике для обнаружения подозрительной и вредоносной активности. Помогите защитить Вашу компанию от международной хакерской группировки AnonMasons.

У Вас есть данные сетевой активности в корпоративной сети компании “СуперМегатек”. CDO Вашей компании, посовещавшись с CTO, решили перенести данные в облачную инфраструктуру с использованием аналитической СУБД Clickhouse – в Yandex Managed Service for ClickHouse.

### Задание

Используя язык программирования R, библиотеку ClickhouseHTTP и облачную IDE Rstudio Server, развернутую в Yandex Cloud, выполнить задания и составить отчёт.

## Ход работы

### Подключение к RStudio Server

Аналогично предыдущей практической подключаемся к RStudio Server: `ssh -i <путь-к-ключу> -L 8787:127.0.0.1:8787 user14@62.84.123.211`

### Установка библиотек

```{r}
install.packages("ClickHouseHTTP")
```

```{r}
library(ClickHouseHTTP)
library(tidyverse)
```

```{r}
library(dplyr)
library(DBI)
```

### Настройка СУБД и импорт датасета

```{r}
connection <- dbConnect(
  ClickHouseHTTP::ClickHouseHTTP(),
  host="rc1d-sbdcf9jd6eaonra9.mdb.yandexcloud.net",
  port=8443,
  user="student24dwh",
  password="DiKhuiRIVVKdRt9XON",
  db="TMdata",
  https=TRUE,
  ssl_verifypeer=FALSE)

database<-dbReadTable(connection, "data")
df<- dbGetQuery(connection, "SELECT * FROM data")

df %>% head
```

### Выполнение заданий

#### Задание 1. Найдите утечку данных из Вашей сети

Важнейшие документы с результатами нашей исследовательской деятельности в области создания вакцин скачиваются в виде больших заархивированных дампов. Один из хостов в нашей сети используется для пересылки этой информации – он пересылает гораздо больше информации на внешние ресурсы в Интернете, чем остальные компьютеры нашей сети. Определите его IP-адрес.

```{r}
df_1 <- df %>%
  filter(!grepl('^1[2-4].*', dst)) %>%
  group_by(src) %>%
  summarise(sum_bytes = sum(bytes)) %>%
  top_n(n = 1, wt = sum_bytes)

df_1 %>% collect()
```

Ответ: 13.37.84.125

#### Задание 2. Найдите утечку данных 2

Другой атакующий установил автоматическую задачу в системном планировщике cron для экспорта содержимого внутренней wiki системы. Эта система генерирует большое количество трафика в нерабочие часы, больше чем остальные хосты. Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителя из предыдущей задачи.

Определим рабочие и нерабочие часы:

```{r}
work_time <- df %>%
  filter(!grepl('^1[2-4].*', dst)) %>%
  mutate(timestamp = hour(as_datetime(timestamp / 1000))) %>% 
  group_by(timestamp) %>% 
  summarize(sum_bytes = sum(bytes)) %>% 
  arrange(desc(sum_bytes))

work_time %>% collect()
```

```{r}
df_2 <- df %>%
  mutate(timestamp = hour(as_datetime(timestamp / 1000))) %>%
  filter(!grepl('^1[2-4].*', dst) & timestamp >= 0 & timestamp <= 15) %>%
  group_by(src) %>%
  summarise(sum_bytes = sum(bytes)) %>%
  filter(src != "13.37.84.125") %>%
  top_n(1, wt = sum_bytes)

df_2 %>% collect()
```

Ответ: 12.55.77.96

#### Задание 3. Найдите утечку данных 3

Еще один нарушитель собирает содержимое электронной почты и отправляет в Интернет используя порт, который обычно используется для другого типа трафика. Атакующий пересылает большое количество информации используя этот порт, которое нехарактерно для других хостов, использующих этот номер порта. Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителей из предыдущих задач.

```{r}
df_3 <- df %>%
  filter(!grepl('^1[2-4].*', dst) & src != "13.37.84.125" & src != "12.55.77.96") %>%
  group_by(src, port) %>%
  summarise(bytes_ip_port = sum(bytes), .groups = "drop") %>%
  group_by(port) %>%
  mutate(sum_traffic_by_port = mean(bytes_ip_port)) %>%
  ungroup() %>%
  top_n(1, bytes_ip_port / sum_traffic_by_port)

df_3 %>% collect()
```

Ответ: 12.30.96.87

#### Задание 4. Обнаружение канала управления

Зачастую в корпоративных сетях находятся ранее зараженные системы, компрометация которых осталась незамеченной. Такие системы генерируют небольшое количество трафика для связи с панелью управления бот-сети, но с одинаковыми параметрами – в данном случае с одинаковым номером порта. Какой номер порта используется бот-панелью для управления ботами?

```{r}
df_4 <- df%>%
  group_by(port) %>%
  summarise(min_bytes = min(bytes),
            max_bytes = max(bytes),
            diff_bytes = max(bytes) - min(bytes),
            avg_bytes = mean(bytes),
            count = n()) %>%
  filter(avg_bytes - min_bytes < 10 & min_bytes != max_bytes) %>%
  select(port)

df_4 %>% collect()
```

Ответ: 124

#### Задание 5. Обнаружение P2P трафика

Иногда компрометация сети проявляется в нехарактерном трафике между хостами в локальной сети, который свидетельствует о горизонтальном перемещении (lateral movement). В нашей сети замечена система, которая ретранслирует по локальной сети полученные от панели управления бот-сети команды, создав таким образом внутреннюю пиринговую сеть. Какой уникальный порт используется этой бот сетью для внутреннего общения между собой?

```{r}
df_5 <- df %>%
  filter(grepl('^1[2-4].*', src) & grepl('^1[2-4].*', dst)) %>%
  group_by(port) %>%
  summarise(diff_bytes = max(bytes) - min(bytes)) %>%
  arrange(desc(diff_bytes)) %>% 
  select(port) %>%
  head(1)

df_5 %>% collect()
```

Ответ: 115

#### Задание 6. Чемпион малвари

Нашу сеть только что внесли в списки спам-ферм. Один из хостов сети получает множество команд от панели C&C, ретранслируя их внутри сети. В обычных условиях причин для такого активного взаимодействия внутри сети у данного хоста нет. Определите IP такого хоста.

```{r}
df_6 <- df %>%
  filter(grepl('^1[2-4].*', src) & grepl('^1[2-4].*', dst)) %>%
  group_by(src) %>%
  summarise(count = n()) %>%
  arrange(desc(count)) %>%
  head(1)

df_6 %>% collect()
```

Ответ: 13.42.70.40

#### Задание 7. Скрытая бот-сеть

В нашем трафике есть еще одна бот-сеть, которая использует очень большой интервал подключения к панели управления. Хосты этой продвинутой бот-сети не входят в уже обнаруженную нами бот-сеть. Какой порт используется продвинутой бот-сетью для коммуникации?

```{r}
df_7 <- df %>%
  filter(timestamp == max(timestamp, na.rm = TRUE)) %>%
  select(port)

df_7 %>% collect()
```

Ответ: 83

#### Задание 8. Внутренний сканер

Одна из наших машин сканирует внутреннюю сеть. Что это за система?

```{r}
df_8 <- df %>%
  filter(grepl('^1[2-4].*', src) & grepl('^1[2-4].*', dst)) %>%
  group_by(src) %>%
  summarise(time = mean(timestamp, na.rm = TRUE),
            count = n_distinct(dst)) %>%
  arrange(time) %>%
  head(1)

df_8 %>% collect()
```

## Оценка результата

В результате практической работы был проведен анализ сетевой активности с помощью библиотеки ClickHouseHTTP и СУбД ClickHouse и были найдены проблемы во внутренней сети предприятия

## Вывод

Были получены навыки использования СУБД ClickHouse для обработки и анализа больших данных совместно с языком программирования R
